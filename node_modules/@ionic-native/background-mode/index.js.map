{"version":3,"sources":["../../../src/@ionic-native/plugins/background-mode/index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n\n\n/**\n * Configurations items that can be updated.\n */\nexport interface BackgroundModeConfiguration {\n\n  /**\n   * Title of the background task\n   */\n  title?: String;\n\n  /**\n   * Description of background task\n   */\n  text?: String;\n\n  /**\n   * This will look for `<icon name>.png` in platforms/android/res/drawable|mipmap\n   */\n  icon?: string;\n\n  color?: string;\n\n  /**\n   * By default the app will come to foreground when taping on the notification. If false, plugin won't come to foreground when tapped.\n   */\n  resume?: boolean;\n\n  hidden?: boolean;\n\n  bigText?: boolean;\n\n  /**\n   * The text that scrolls itself on statusbar\n   */\n  ticker?: String;\n\n  /**\n   * if true plugin will not display a notification. Default is false.\n   */\n  silent?: boolean;\n\n}\n\n/**\n * @name Background Mode\n * @description\n * Cordova plugin to prevent the app from going to sleep while in background.\n * Requires Cordova plugin: cordova-plugin-background-mode. For more info about plugin, visit: https://github.com/katzer/cordova-plugin-background-mode\n *@usage\n * ```typescript\n * import { BackgroundMode } from '@ionic-native/background-mode';\n *\n * constructor(private backgroundMode: BackgroundMode) { }\n *\n * ...\n *\n * this.backgroundMode.enable();\n * ```\n *\n * @interfaces\n * BackgroundModeConfiguration\n */\n@Plugin({\n  pluginName: 'BackgroundMode',\n  plugin: 'cordova-plugin-background-mode',\n  pluginRef: 'cordova.plugins.backgroundMode',\n  repo: 'https://github.com/katzer/cordova-plugin-background-mode',\n  platforms: ['AmazonFire OS', 'Android', 'Browser', 'iOS', 'Windows']\n})\n\nexport class BackgroundMode extends IonicNativePlugin {\n\n  /**\n   * Enable the background mode.\n   * Once called, prevents the app from being paused while in background.\n   */\n  @Cordova({\n    sync: true\n  })\n  enable(): void { }\n\n  /**\n   * Disable the background mode.\n   * Once the background mode has been disabled, the app will be paused when in background.\n   */\n  @Cordova()\n  disable(): Promise<any> { return; }\n\n  /**\n   * Checks if background mode is enabled or not.\n   * @returns {boolean} returns a boolean that indicates if the background mode is enabled.\n   */\n  @Cordova({\n    sync: true\n  })\n  isEnabled(): boolean { return; }\n\n  /**\n   * Can be used to get the information if the background mode is active.\n   * @returns {boolean} returns a boolean that indicates if the background mode is active.\n   */\n  @Cordova({\n    sync: true\n  })\n  isActive(): boolean { return; }\n\n  /**\n   * Override the default title, ticker and text.\n   * Available only for Android platform.\n   * @param {BackgroundModeConfiguration} options List of option to configure. See table below\n   */\n  @Cordova({\n    platforms: ['Android']\n  })\n  setDefaults(options?: BackgroundModeConfiguration): Promise<any> { return; }\n\n  /**\n   * Modify the displayed information.\n   * Available only for Android platform.\n   * @param {BackgroundModeConfiguration} options Any options you want to update. See table below.\n   */\n  @Cordova({\n    platforms: ['Android'],\n    sync: true\n  })\n  configure(options?: BackgroundModeConfiguration): void {}\n\n  /**\n   * Listen for events that the plugin fires. Available events are `enable`, `disable`, `activate`, `deactivate` and `failure`.\n   * @param event {string} Event name\n   * @returns {Observable<any>}\n   */\n  @Cordova({\n    observable: true,\n    clearFunction: 'un',\n    clearWithArgs: true\n  })\n  on(event: string): Observable<any> { return; }\n\n  /**\n   * Android allows to programmatically move from foreground to background.\n   */\n  @Cordova({\n    platforms: ['Android'],\n    sync: true\n  })\n  moveToBackground(): void { }\n\n  /**\n   * Enable GPS-tracking in background (Android).\n   */\n  @Cordova({\n    platforms: ['Android'],\n    sync: true\n  })\n  disableWebViewOptimizations (): void { }\n\n  /**\n   * Android allows to programmatically move from background to foreground.\n   */\n  @Cordova({\n    platforms: ['Android'],\n    sync: true\n  })\n  moveToForeground(): void { }\n\n  /**\n   * Override the back button on Android to go to background instead of closing the app.\n   */\n  @Cordova({\n    platforms: ['Android'],\n    sync: true\n  })\n  overrideBackButton(): void { }\n\n  /**\n   * Exclude the app from the recent task list. Works on Android 5.0+.\n   */\n  @Cordova({\n    platforms: ['Android'],\n    sync: true\n  })\n  excludeFromTaskList(): void { }\n\n  /**\n   * The method works async instead of isActive() or isEnabled().\n   */\n  @Cordova({\n    platforms: ['Android']\n  })\n  isScreenOff(): Promise<boolean> { return; }\n\n  /**\n   * Turn screen on\n   */\n  @Cordova({\n    platforms: ['Android'],\n    sync: true\n  })\n  wakeUp(): void { }\n\n  /**\n   * Turn screen on and show app even locked\n   */\n  @Cordova({\n    platforms: ['Android'],\n    sync: true\n  })\n  unlock(): void { }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}